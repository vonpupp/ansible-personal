# -*- mode: ruby -*-
# vi: set ft=ruby :

#VAGRANTFILE_API_VERSION = "2"
#Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
#  ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'
#  config.vm.box_url = "https://atlas.hashicorp.com/brightcove/boxes/centos7.2"
#  config.vm.box = "brightcove/centos7.2"
##  config.vm.box = "centos/centos7.2.1511"
#  # Tell Vagrant to use the Docker provisioner
#  config.vm.provision "docker"
#  # The following line terminates all ssh connections. Therefore
#  # Vagrant will be forced to reconnect.
#  # That's a workaround to have the docker command in the PATH
#  config.vm.provision "shell", inline:
#     "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"
#  # Assign a name to your host VM
#  config.vm.hostname = "docker"
#  # Use the phusion ubuntu box for our host VM
#  # Forward port 8080 to host machine
#  #config.vm.network "forwarded_port", guest: 80, host: 8080
#  # Sync your project in the /vagrant directory inside the VM
#  config.vm.synced_folder ".", "/vagrant"
#end


Vagrant.configure("2") do |config|
  ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'
  config.vm.provider "docker" do |d|
    d.image = "pritunl/archlinux"
    d.has_ssh = true
    d.create_args = [ "--privileged", "-v", "/sys/fs/cgroup:/sys/fs/cgroup:ro" ]
  end
  #config.vm.synced_folder ".", "/vagrant"
  #config.vm.provision "shell", path: "scripts/provision-base.sh"
  #config.vm.provision "shell", path: "scripts/provision-icrm-el7.sh"
end
