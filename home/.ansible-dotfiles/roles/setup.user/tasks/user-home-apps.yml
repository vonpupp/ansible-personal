#- name: Install requirements2.txt for {{ user }}
#  become: yes
#  become_user: "{{ user }}"
#  pip: requirements=~{{ user }}/{{ lookup('pipe','pwd')|dirname|basename }}/files/requirements2.txt virtualenv=~{{ user }}/.venv/bin2 virtualenv_command=virtualenv2 executable=pip2
#
#- name: Install requirements3.txt for {{ user }}
#  become: yes
#  become_user: "{{ user }}"
#  pip: requirements=~{{ user }}/{{ lookup('pipe','pwd')|dirname|basename }}/files/requirements3.txt virtualenv=~{{ user }}/.venv/bin3 virtualenv_command=virtualenv3 executable=pip3

#  # .xinitrc
#- name: Copy .xinitrc
#  become: yes
#  become_user: "{{ user }}"
#  copy: src=files/.xinitrc dest=~{{ user }}/.xinitrc

      #- name: Clone homeshick
      #  become: yes
      #  become_user: "{{ user }}"
      #  git: repo=https://github.com/andsens/homeshick.git dest=~{{ user }}/.homesick/repos/homeshick


# FASD

- name: Clone fasd for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  git: repo=https://github.com/clvv/fasd.git dest=/tmp/fasd

- name: Install fasd for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  make:
    chdir: /tmp/fasd
    target: install
    params:
      PREFIX: ~{{ user }}

- name: Clean fasd on tmp
  become: yes
  file:
    state: absent
    path: /tmp/fasd


  # FZF
- name: Clone fzf for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  git: repo=https://github.com/junegunn/fzf.git dest=~{{ user }}/.fzf

- name: Install fzf for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  shell:
    ~{{ user }}/.fzf/install --no-update-rc --no-completion --no-key-bindings


  # BASE16
- name: Clone base16-shell for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  git: repo=https://github.com/chriskempson/base16-shell.git dest=~{{ user }}/.config/base16-shell


  # CREATE_AP
- name: Clone create_ap for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  git: repo=https://github.com/oblique/create_ap.git dest=~{{ user }}/bin/create_ap


  # GITFLOW
- name: Download gitflow for user {{ user }}
  get_url:
    url: https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh
    dest: /tmp
    mode: 0755

- name: Install gitflow for user "{{ user }}"
  become: yes
  become_user: "{{ user }}"
  shell:
    INSTALL_PREFIX=~{{ user }}/bin /tmp/gitflow-installer.sh
    #rm ~{{ user }}/tmp/gitflow-installer.sh

- name: Clean gitflow on tmp
  become: yes
  file:
    state: absent
    path: /tmp/gitflow-installer.sh


  # AUTOENV
- name: Clone autoenv for user "{{ user }}"
  become: yes
  become_user: "{{ user }}"
  git: repo=https://github.com/kennethreitz/autoenv dest=~{{ user }}/.autoenv



#- name: "source asdf in bashrc"
#  become: yes
#  become_user: "{{ user }}"
#  lineinfile: dest="~/.bash_profile" create=yes line="source ~/.asdf/asdf.sh"

# base-devel dep (setup.devel.env/main role)
- name: Ensure package dependencies
  become: yes
  include_role:
    name: setup.devel.env

- name: Ensure setup.dotfiles dependencies
  become: yes
  become_user: "{{ user }}"
  include_role:
    name: setup.dotfiles
  with_items:
    - 'home'
    - 'apps'
    - 'zsh'
  loop_control:
    loop_var: dotfiles_repo
  ignore_errors: yes

- name: Ensure setup.user asdf dependency
  include: "user-asdf.yml"



# HUB

- name: Clone hub for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  git: repo=https://github.com/github/hub.git dest=/tmp/hub

- name: Bundle update
  become: yes
  become_user: "{{ user }}"
  command: "bash -lc 'cd /tmp/hub && bundle update'"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}:~{{ user }}/.asdf/bin:~{{ user }}/.asdf/shims"
  ignore_errors: yes

- name: Bundle install
  become: yes
  become_user: "{{ user }}"
  command: "bash -lc 'cd /tmp/hub && ~{{ user }}/.asdf/shims/bundle install'"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}:~{{ user }}/.asdf/bin:~{{ user }}/.asdf/shims"
  ignore_errors: yes

- name: Install hub (only) for user {{ user }}
  become: yes
  become_user: "{{ user }}"
  command: "bash -lc 'cd /tmp/hub && ./script/build -o ~{{ user }}/bin/hub'"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}:~{{ user }}/.asdf/bin:~{{ user }}/.asdf/shims"

##  make:
##    chdir: /tmp/hub
##    target: install
##    params:
##      prefix: "$HOME"
#- name: Install hub (with man pages) for user {{ user }}
#  become: yes
#  become_user: "{{ user }}"
#  command: "bash -lc 'cd /tmp/hub && make install prefix=~{{ user }}'"
#  environment:
#    PATH: "{{ lookup('env', 'PATH') }}:~{{ user }}/.asdf/bin:~{{ user }}/.asdf/shims"

- name: Clean hub on tmp
  become: yes
  become_user: "{{ user }}"
  file:
    state: absent
    path: /tmp/hub
