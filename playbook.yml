#!/usr/bin/env ansible-playbook --inventory-file=inventory

---
- hosts: all

  roles:
    # Upgrade
    - { role: upgrade.system, tags: [ 'upgrade' ] }         # Move to OS group and to the root playbook
    # Pacman packages
    - { role: install.list.system.packages, packages_list: "{{ cui_minimal_packages }}",        tags: [ 'packages_cui_minimal' ] }
    - { role: install.list.system.packages, packages_list: "{{ cui_workstation_packages }}",    tags: [ 'packages_cui_workstation' ] }
    - { role: install.list.system.packages, packages_list: "{{ gui_xorg_packages }}",           tags: [ 'packages_gui_xorg' ] }
    - { role: install.list.system.packages, packages_list: "{{ gui_awesome_wm_packages }}",     tags: [ 'packages_gui_awesome_wm' ] }
    - { role: install.list.system.packages, packages_list: "{{ gui_font_packages }}",           tags: [ 'packages_gui_fonts' ] }
    - { role: install.list.system.packages, packages_list: "{{ gui_apps_packages }}",           tags: [ 'packages_gui_apps' ] }
    - { role: install.list.system.packages, packages_list: "{{ suite_latex }}",                 tags: [ 'packages_suite_latex' ] }
    - { role: install.list.system.packages, packages_list: "{{ suite_libreoffice }}",           tags: [ 'packages_suite_libreoffice' ] }
    # OS setup
    - { role: setup.os, os_feature: "locale", os_locale: "en_US", os_language: 'en_US:en:pt',   tags: [ 'os_locale' ] }
    - { role: setup.os, os_feature: "hostname", os_hostname: "virtualbox",                      tags: [ 'os_hostname' ] }
    - { role: setup.os, os_feature: "pacman",                                                   tags: [ 'os_pacman' ] }
    - { role: setup.os, os_feature: "service-networkmanager",                                   tags: [ 'os_service_networkmanager' ] }
    #- { role: setup.os, os_feature: "service-dnsmasq",                                          tags: [ 'os_service_dnsmasq' ] }
    - { role: setup.os, os_feature: "service-ntp",                                              tags: [ 'os_service_ntp' ] }
    - { role: setup.os, os_feature: "service-ufw", os_ssh_port: 22,                             tags: [ 'os_service_ufw' ] }
    - { role: setup.os, os_feature: "service-ssh", os_ssh_port: 22,                             tags: [ 'os_service_ssh' ] }    # Not implemented
    - { role: setup.os, os_feature: "service-docker",                                           tags: [ 'os_service_docker' ] }
    - { role: setup.os, os_feature: "service-kvm",                                              tags: [ 'os_service_kvm' ] }
    - { role: setup.os, os_feature: "gpg-recv-key", os_gpg_recv_key: "73B35DA54ACB7D10",        tags: [ 'os_gpg_recv_key' ] }
    #- { role: setup.os, os_feature: "service-mosh", os_ssh_port: 22,                            tags: [ 'os_service_mosh' ] }  # Not implemented
    - { role: install.bin.yaourt,                                                               tags: [ 'yaourt' ] }            # Move to OS group?
    - { role: install.list.aur.packages, packages_list: "{{ cui_aur_packages }}",               tags: [ 'packages_cui_aur' ] }
    - { role: install.list.aur.packages , packages_list: "{{ gui_aur_packages }}",              tags: [ 'packages_gui_aur' ] }
    # Development
    #- { role: setup.devel.env, devel_env: "python", user: "{{ user }}",                         tags: [ 'devel_env_python' ] }
    - { role: setup.devel.env, devel_env: "python",                                             tags: [ 'devel_env_python' ] }
    - { role: setup.devel.env, devel_env: "ruby",                                               tags: [ 'devel_env_ruby' ] }
    - { role: setup.devel.env, devel_env: "node",                                               tags: [ 'devel_env_node' ] }
    #- { role: setup.devel.env, devel_env: "java",                                               tags: [ 'devel_env_java' ] }
    #- { role: setup.devel.env, devel_env: "ipython",                                            tags: [ 'devel_env_ipython' ] }
    - { role: setup.devel.env, devel_env: "r",                                                  tags: [ 'devel_env_r' ] }
    - { role: setup.devel.env, devel_env: "haskell",                                            tags: [ 'devel_env_haskell' ] }
    # Public dotfiles
    - { role: setup.dotfiles, dotfiles_repo: "home",                                            tags: [ 'dotfiles_home' ] }
    - { role: setup.dotfiles, dotfiles_repo: "tmux",                                            tags: [ 'dotfiles_tmux' ] }
    - { role: setup.dotfiles, dotfiles_repo: "vim",                                             tags: [ 'dotfiles_vim' ] }
    - { role: setup.dotfiles, dotfiles_repo: "zsh",                                             tags: [ 'dotfiles_zsh' ] }
    - { role: setup.dotfiles, dotfiles_repo: "apps",                                            tags: [ 'dotfiles_apps' ] }
    - { role: setup.dotfiles, dotfiles_repo: "awesome",                                         tags: [ 'dotfiles_awesome' ] }
    - { role: setup.dotfiles, dotfiles_repo: "task",                                            tags: [ 'dotfiles_task' ] }
    - { role: setup.dotfiles, dotfiles_repo: "fortune-bible",                                   tags: [ 'dotfiles_fortune_bible' ] }
    # Private dotfiles
    - { role: setup.dotfiles, dotfiles_repo: "mutt",                                            tags: [ 'dotfiles_mutt' ] }
    - { role: setup.dotfiles, dotfiles_repo: "secrets",                                         tags: [ 'dotfiles_secrets' ] }
    # Asdf
    - { role: setup.user, user_feature: "home-apps",                                            tags: [ 'user_home_apps' ] }
    - { role: setup.user, user_feature: "asdf",                                                 tags: [ 'user_asdf' ] }
    #- { role: setup.dotfiles, dotfiles_repo: "asdf-python",                                     tags: [ 'dotfiles_asdf_python' ] }
    #- { role: setup.dotfiles, dotfiles_repo: "asdf-ruby",                                       tags: [ 'dotfiles_asdf_ruby' ] }
    #- { role: setup.dotfiles, dotfiles_repo: "asdf-nodejs",                                     tags: [ 'dotfiles_asdf_nodejs' ] }
    #- { role: setup.dotfiles, dotfiles_repo: "asdf-go",                                         tags: [ 'dotfiles_asdf_go' ] }

  vars_files:
    - 'defaults/main.yml'
    - 'vars/main.yml'

# lin-dev.yml
#
# ROOT
# os-cron.yml
# os-mount-nfs-cache.yml
# os-network-wifi.yml
# os-network-wired.yml
# os-pacman.yml
# os-pkgfile.yml
# os-update-packages-cache.yml
# #os-systemd.yml
#
# shared.yml
#
# xorg-virtualbox.yml
# xorg-x230.yml
#
# service-ssh.yml
# service-firewall-base.yml
# service-firewall-ssh.yml
#
# pam-auth-fprintd.yml
